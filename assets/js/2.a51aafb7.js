(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{1785:function(a,t,i){"use strict";i.r(t);var r=i(13),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"margin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin"}},[a._v("#")]),a._v(" margin")]),a._v(" "),r("p",[a._v("本节能学到的知识：")]),a._v(" "),r("ul",[r("li",[a._v("margin 与元素尺寸的关系、")]),a._v(" "),r("li",[a._v("margin 的百分比单位、")]),a._v(" "),r("li",[a._v("正确看待 CSS 的 margin 重叠、")]),a._v(" "),r("li",[a._v("深入理解 margin：auto、")]),a._v(" "),r("li",[a._v("剖析 CSS margin 负值定位的常见应用、")]),a._v(" "),r("li",[a._v("剖析在使用 margin 时容易发生困惑的无效情形、")]),a._v(" "),r("li",[a._v("扩展介绍 margin-start/margin-end 属性")])]),a._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#_1-css-margin-与容器的尺寸"}},[a._v("1. CSS margin 与容器的尺寸")]),r("ul",[r("li",[r("a",{attrs:{href:"#标准盒模型与元素尺寸"}},[a._v("标准盒模型与元素尺寸")])]),r("li",[r("a",{attrs:{href:"#margin-与可视尺寸"}},[a._v("margin 与可视尺寸")])]),r("li",[r("a",{attrs:{href:"#一侧定宽的自适应布局"}},[a._v("一侧定宽的自适应布局")])]),r("li",[r("a",{attrs:{href:"#margin-与占据尺寸"}},[a._v("margin 与占据尺寸")])]),r("li",[r("a",{attrs:{href:"#在滚动容器中让图片上下留白"}},[a._v("在滚动容器中让图片上下留白")])])])]),r("li",[r("a",{attrs:{href:"#_2-css-margin-与百分比单位"}},[a._v("2. CSS margin 与百分比单位")]),r("ul",[r("li",[r("a",{attrs:{href:"#百分比-margin-的计算规则"}},[a._v("百分比 margin 的计算规则")])]),r("li",[r("a",{attrs:{href:"#宽高-2-1-自适应矩形"}},[a._v("宽高 2：1 自适应矩形")])])])]),r("li",[r("a",{attrs:{href:"#_3-正确看待-css-的-margin-重叠"}},[a._v("3. 正确看待 CSS 的 margin 重叠")]),r("ul",[r("li",[r("a",{attrs:{href:"#margin-重叠通常特性"}},[a._v("margin 重叠通常特性")])]),r("li",[r("a",{attrs:{href:"#margin-重叠-3-种情景"}},[a._v("margin 重叠 3 种情景")])]),r("li",[r("a",{attrs:{href:"#父子-margin-重叠其他条件"}},[a._v("父子 margin 重叠其他条件")])]),r("li",[r("a",{attrs:{href:"#干掉-margin-top-重叠"}},[a._v("干掉 margin-top 重叠")])]),r("li",[r("a",{attrs:{href:"#干掉-margin-bottom-重叠"}},[a._v("干掉 margin-bottom 重叠")])]),r("li",[r("a",{attrs:{href:"#空-block-元素-margin-重叠"}},[a._v("空 block 元素 margin 重叠")])]),r("li",[r("a",{attrs:{href:"#空-block-元素-margin-重叠其他条件"}},[a._v("空 block 元素 margin 重叠其他条件")])]),r("li",[r("a",{attrs:{href:"#margin-重叠计算规则"}},[a._v("margin 重叠计算规则")])]),r("li",[r("a",{attrs:{href:"#margin-重叠的意义是"}},[a._v("margin 重叠的意义是  ？")])]),r("li",[r("a",{attrs:{href:"#实践-善用-margin-重叠"}},[a._v("实践：善用 margin 重叠")])])])]),r("li",[r("a",{attrs:{href:"#_4-理解-css-中的-margin-auto"}},[a._v("4. 理解 CSS 中的 margin:auto")]),r("ul",[r("li",[r("a",{attrs:{href:"#作用机制"}},[a._v("作用机制")])]),r("li",[r("a",{attrs:{href:"#auto-填充-规则"}},[a._v("auto 填充 规则")])]),r("li",[r("a",{attrs:{href:"#为什么图片不居中"}},[a._v("为什么图片不居中？")])]),r("li",[r("a",{attrs:{href:"#为什么-margin-auto-0-无法垂直居中"}},[a._v("为什么 margin:auto 0 无法垂直居中 ?")])]),r("li",[r("a",{attrs:{href:"#writing-mode-与垂直居中"}},[a._v("writing-mode 与垂直居中")])]),r("li",[r("a",{attrs:{href:"#绝对定位元素的-margin-auto-居中"}},[a._v("绝对定位元素的 margin:auto 居中")])])])]),r("li",[r("a",{attrs:{href:"#_5-css-margin-负值定位"}},[a._v("5. CSS margin 负值定位")]),r("ul",[r("li",[r("a",{attrs:{href:"#margin-负值下的两端对齐"}},[a._v("margin 负值下的两端对齐")])]),r("li",[r("a",{attrs:{href:"#margin-负值下的等高布局"}},[a._v("margin 负值下的等高布局")])]),r("li",[r("a",{attrs:{href:"#margin-负值下的两栏自适应布局"}},[a._v("margin 负值下的两栏自适应布局")])])])]),r("li",[r("a",{attrs:{href:"#_6-css-margin-无效情形解析"}},[a._v("6. CSS margin 无效情形解析")]),r("ul",[r("li",[r("a",{attrs:{href:"#inline-水平元素的垂直-margin-无效"}},[a._v("inline 水平元素的垂直 margin 无效")])]),r("li",[r("a",{attrs:{href:"#table-cell-与-margin"}},[a._v("table-cell 与 margin")])]),r("li",[r("a",{attrs:{href:"#osition-absolute-与-margin"}},[a._v("osition:absolute 与 margin")])]),r("li",[r("a",{attrs:{href:"#鞭长莫及导致无效"}},[a._v("鞭长莫及导致无效")])]),r("li",[r("a",{attrs:{href:"#内联特性导致的-margin-无效"}},[a._v("内联特性导致的 margin 无效")])])])]),r("li",[r("a",{attrs:{href:"#_7-了解-margin-start-margin-end-属性"}},[a._v("7. 了解 margin-start/margin-end 属性")]),r("ul",[r("li",[r("a",{attrs:{href:"#webkit-的-margin-的其他属性"}},[a._v("-webkit 的 margin 的其他属性")])])])])])]),r("p"),a._v(" "),r("h2",{attrs:{id:"_1-css-margin-与容器的尺寸"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-css-margin-与容器的尺寸"}},[a._v("#")]),a._v(" 1. CSS margin 与容器的尺寸")]),a._v(" "),r("blockquote",[r("p",[a._v("了解 margin 与元素尺寸之间关系")])]),a._v(" "),r("p",[a._v("总的来讲：margin 可以改变容器的尺寸；而且是比较激进的那种，人若犯我，我必犯人")]),a._v(" "),r("h3",{attrs:{id:"标准盒模型与元素尺寸"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#标准盒模型与元素尺寸"}},[a._v("#")]),a._v(" 标准盒模型与元素尺寸")]),a._v(" "),r("p",[r("img",{attrs:{src:i(808),alt:"image-20200503143136678"}})]),a._v(" "),r("ul",[r("li",[a._v("上图 margin 内层的实线：可视尺寸 clientWidth（标准）")]),a._v(" "),r("li",[a._v("上图 margin 外层的虚线：占据尺寸 outerWidth (非标准)")])]),a._v(" "),r("h3",{attrs:{id:"margin-与可视尺寸"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-与可视尺寸"}},[a._v("#")]),a._v(" margin 与可视尺寸")]),a._v(" "),r("p",[r("strong",[a._v("margin 影响可视尺寸的前提")]),a._v("：")]),a._v(" "),r("ol",[r("li",[r("p",[a._v("适用于没有设定 width/height 的普通 blokc 水平元素。")]),a._v(" "),r("p",[a._v("float、absolute/fixed、inline 水平、table-cell... 都可以让元素 block 化，但是这些已经不属于普通的 blokc 元素了")])]),a._v(" "),r("li",[r("p",[a._v("只适用于水平方向尺寸")])])]),a._v(" "),r("p",[r("img",{attrs:{src:i(809),alt:"image-20200503143643842"}})]),a._v(" "),r("p",[a._v("上面蓝色区域设置了一个 margin 为 50px，改变它的值为 "),r("code",[a._v("-50")]),a._v("，会发现它变宽了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(810),alt:"image-20200503143744185"}})]),a._v(" "),r("p",[a._v("修改为 100 px，会发现宽度变得更小了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(811),alt:"image-20200503143833865"}})]),a._v(" "),r("p",[a._v("就是说：margin 为负值的时候，会让可视宽度变大；但是只适用于水平方向的尺寸，对于垂直方向的尺寸是无效的。")]),a._v(" "),r("p",[a._v("这种特性也是可以利用的，下面来讲解使用它实现一侧定宽的自适应布局")]),a._v(" "),r("h3",{attrs:{id:"一侧定宽的自适应布局"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一侧定宽的自适应布局"}},[a._v("#")]),a._v(" 一侧定宽的自适应布局")]),a._v(" "),r("p",[r("img",{attrs:{src:i(812),alt:"image-20200503144259793"}})]),a._v(" "),r("p",[a._v("上图的示例在 float 课程中讲过的，那么能实现这一的原理就是，margin 改变了水平方向的可视宽度。")]),a._v(" "),r("p",[a._v("还可以利用他实现两端对齐布局（本章第 5 节讲解）等。")]),a._v(" "),r("h3",{attrs:{id:"margin-与占据尺寸"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-与占据尺寸"}},[a._v("#")]),a._v(" margin 与占据尺寸")]),a._v(" "),r("ol",[r("li",[r("code",[a._v("block/inline-block")]),a._v(" 水平元素均适用")]),a._v(" "),r("li",[a._v("与有没有设定 "),r("code",[a._v("width/height")]),a._v(" 值无关")]),a._v(" "),r("li",[a._v("适用于水平方向和垂直方向")])]),a._v(" "),r("p",[a._v("比如下图，负值的时候，它占据的尺寸变小了，所以背景变小了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(813),alt:"image-20200503144708643"}})]),a._v(" "),r("p",[a._v("如何利用这一特性？")]),a._v(" "),r("h3",{attrs:{id:"在滚动容器中让图片上下留白"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在滚动容器中让图片上下留白"}},[a._v("#")]),a._v(" 在滚动容器中让图片上下留白")]),a._v(" "),r("p",[r("img",{attrs:{src:i(814),alt:"image-20200503144906126"}})]),a._v(" "),r("p",[a._v("左侧图片在非 Chrome 浏览器下，底部没有留白，这个原理在 overflow 中讲解过了。右侧的上下都成功留白了")]),a._v(" "),r("p",[a._v("还可以利用它实现等高布局（本章第 5 节讲解）等...")]),a._v(" "),r("h2",{attrs:{id:"_2-css-margin-与百分比单位"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-css-margin-与百分比单位"}},[a._v("#")]),a._v(" 2. CSS margin 与百分比单位")]),a._v(" "),r("blockquote",[r("p",[a._v("了解 margin 百分比单位")])]),a._v(" "),r("p",[a._v("这里讲解百分比单位是因为有可讲的，特性可以用来实现厉害的东西，也不是初级科普内容")]),a._v(" "),r("p",[a._v("主要讲解两点：")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("认识：水平方向百分比/垂直方向百分比")])]),a._v(" "),r("li",[r("p",[a._v("搞清楚：普通元素百分比/绝对定位元素百分比 有啥区别？")])])]),a._v(" "),r("h3",{attrs:{id:"百分比-margin-的计算规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#百分比-margin-的计算规则"}},[a._v("#")]),a._v(" 百分比 margin 的计算规则")]),a._v(" "),r("ul",[r("li",[a._v("普通元素的百分比 margin 都是相对于容器的宽度计算的")]),a._v(" "),r("li",[a._v("绝对定位元素的百分比 margin是相对于第一个定位祖先元素(relative/absolute/fixed)的宽度计算的")])]),a._v(" "),r("p",[a._v("可以看到，10% 都是基于 600 这个宽度计算的")]),a._v(" "),r("p",[r("img",{attrs:{src:i(815),alt:"image-20200503145622373"}})]),a._v(" "),r("p",[a._v("普通元素的百分比是相对于他的第一个父级元素计算的，而绝对定位元素是基于第一个定位祖先元素计算的")]),a._v(" "),r("p",[a._v("都是基于宽度计算，但是他们基于的对象不同")]),a._v(" "),r("p",[r("img",{attrs:{src:i(816),alt:"image-20200503150040360"}})]),a._v(" "),r("p",[a._v("如何利用这个特性？")]),a._v(" "),r("h3",{attrs:{id:"宽高-2-1-自适应矩形"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#宽高-2-1-自适应矩形"}},[a._v("#")]),a._v(" 宽高 "),r("code",[a._v("2：1")]),a._v(" 自适应矩形")]),a._v(" "),r("p",[r("img",{attrs:{src:i(817),alt:"image-20200503150233874"}})]),a._v(" "),r("p",[a._v("无论怎么更改 box 的宽度高度，蓝色区域都会以 2:1 的比例进行缩放；因为利用的就是他的计算是通过父级的宽度来进行计算的")]),a._v(" "),r("p",[a._v("这里有一个主意的地方：margin 50%，其实是 4 个方向的，top 和 bottom 也会有 50% 的计算，这个在 css 里面有一个 margin 重叠的现象。下节讲解")]),a._v(" "),r("h2",{attrs:{id:"_3-正确看待-css-的-margin-重叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-正确看待-css-的-margin-重叠"}},[a._v("#")]),a._v(" 3. 正确看待 CSS 的 margin 重叠")]),a._v(" "),r("blockquote",[r("p",[a._v("margin 重叠如何发生，存在的价值")])]),a._v(" "),r("h3",{attrs:{id:"margin-重叠通常特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-重叠通常特性"}},[a._v("#")]),a._v(" margin 重叠通常特性")]),a._v(" "),r("ol",[r("li",[r("p",[a._v("block 水平元素（不包括 float 和 absolute 元素）")])]),a._v(" "),r("li",[r("p",[a._v("只发生在垂直方向（margin-top、margin-bottom）")]),a._v(" "),r("p",[a._v("前提是：不考虑 writing-mode（类似古文从上往下排列）")])])]),a._v(" "),r("h3",{attrs:{id:"margin-重叠-3-种情景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-重叠-3-种情景"}},[a._v("#")]),a._v(" margin 重叠 3 种情景")]),a._v(" "),r("ol",[r("li",[a._v("相邻兄弟元素")]),a._v(" "),r("li",[a._v("父级和第一个 或 最后一个子元素")]),a._v(" "),r("li",[a._v("空的 block 元素（自己与自己发生重叠）")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(818),alt:"image-20200503151150919"}})]),a._v(" "),r("p",[a._v("给 P 设置为 1 em，第 1 行和第 2 行中间应该会出现 2 em 的空间，但是发生了重叠现象")]),a._v(" "),r("p",[r("img",{attrs:{src:i(819),alt:"image-20200503151357793"}})]),a._v(" "),r("p",[a._v("那个 son 的背景颜色，让我们看到了它的高度；给他施加 margin-top 后，按照理解，它的背景颜色区域会变高。实际上是被重合了。没有任何变化，反而是距离上面的距离远了。")]),a._v(" "),r("p",[r("img",{attrs:{src:i(820),alt:"image-20200503151522775"}})]),a._v(" "),r("p",[a._v("这里的表现实际上是等同于 father 与 son 同时设置 top，或则父级设置 top")]),a._v(" "),r("p",[r("img",{attrs:{src:i(821),alt:"image-20200503151621528"}})]),a._v(" "),r("p",[a._v("相当于是 father 的 margin-top=0，son 的 margin-top=80，一重叠，就相当于公用一个")]),a._v(" "),r("h3",{attrs:{id:"父子-margin-重叠其他条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#父子-margin-重叠其他条件"}},[a._v("#")]),a._v(" 父子 margin 重叠其他条件")]),a._v(" "),r("p",[r("img",{attrs:{src:i(822),alt:"image-20200503152004138"}})]),a._v(" "),r("h4",{attrs:{id:"margin-top重叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-top重叠"}},[a._v("#")]),a._v(" margin-top重叠")]),a._v(" "),r("ol",[r("li",[a._v("父元素非块状格式化上下文（bfc）")]),a._v(" "),r("li",[a._v("父元素没有 border-top 设置")]),a._v(" "),r("li",[a._v("父元素没有 padding-top 设置")]),a._v(" "),r("li",[a._v("父元素和第一个子元素之间没有 inline 元素分割")])]),a._v(" "),r("h4",{attrs:{id:"margin-bottom重叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-bottom重叠"}},[a._v("#")]),a._v(" margin-bottom重叠")]),a._v(" "),r("ol",[r("li",[a._v("父元素非块状格式化上下文元素")]),a._v(" "),r("li",[a._v("父元素没有 border-bottom 设置")]),a._v(" "),r("li",[a._v("父元素没有 padding-bottom 设置")]),a._v(" "),r("li",[a._v("父元素和最后一个子元素之间没有 inline 元素分割")]),a._v(" "),r("li",[a._v("父元素没有 height,min-height,max-height 限制")])]),a._v(" "),r("h3",{attrs:{id:"干掉-margin-top-重叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#干掉-margin-top-重叠"}},[a._v("#")]),a._v(" 干掉 margin-top 重叠")]),a._v(" "),r("p",[a._v("通过上述所说的限制，来干掉 margin-top 发生的重叠")]),a._v(" "),r("p",[r("img",{attrs:{src:i(823),alt:"image-20200503152257055"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(824),alt:"image-20200503152321914"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(825),alt:"image-20200503152345926"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(826),alt:"image-20200503152409966"}})]),a._v(" "),r("h3",{attrs:{id:"干掉-margin-bottom-重叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#干掉-margin-bottom-重叠"}},[a._v("#")]),a._v(" 干掉 margin-bottom 重叠")]),a._v(" "),r("p",[a._v("和上面类似，这里演示下多出来的那一个")]),a._v(" "),r("p",[r("img",{attrs:{src:i(827),alt:"image-20200503152801925"}})]),a._v(" "),r("h3",{attrs:{id:"空-block-元素-margin-重叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#空-block-元素-margin-重叠"}},[a._v("#")]),a._v(" 空 block 元素 margin 重叠")]),a._v(" "),r("p",[r("img",{attrs:{src:i(828),alt:"image-20200503153008856"}})]),a._v(" "),r("p",[a._v("只需要看 son，father 是为了能看清楚他的高度。也发现重叠了")]),a._v(" "),r("h3",{attrs:{id:"空-block-元素-margin-重叠其他条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#空-block-元素-margin-重叠其他条件"}},[a._v("#")]),a._v(" 空 block 元素 margin 重叠其他条件")]),a._v(" "),r("p",[a._v("当出现以下项目时，就会发生重叠，只要破坏掉这些限制就破坏掉了重叠")]),a._v(" "),r("ol",[r("li",[a._v("元素没有 borde 设置")]),a._v(" "),r("li",[a._v("元素没有 padding 值")]),a._v(" "),r("li",[a._v("里面没有 inline 元素")]),a._v(" "),r("li",[a._v("没有 height，或则 min-height")])]),a._v(" "),r("h3",{attrs:{id:"margin-重叠计算规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-重叠计算规则"}},[a._v("#")]),a._v(" margin 重叠计算规则")]),a._v(" "),r("p",[a._v("前面介绍了三种重叠的原因，这里介绍重叠计算规则")]),a._v(" "),r("ol",[r("li",[a._v("正正取大值")]),a._v(" "),r("li",[a._v("正负值相加")]),a._v(" "),r("li",[a._v("负负最负值")]),a._v(" "),r("li",[a._v("相邻重叠绝对值最大的负值")]),a._v(" "),r("li",[a._v("父子重叠绝对值最大的负值")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(829),alt:"image-20200503153535691"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(830),alt:"image-20200503153616369"}})]),a._v(" "),r("p",[a._v("负负最负值，对布局的影响比较大，看起来也很复杂")]),a._v(" "),r("p",[r("img",{attrs:{src:i(831),alt:"image-20200503153641037"}})]),a._v(" "),r("p",[a._v("红色的 * 标识下面的浅色区域中的效果展示；")]),a._v(" "),r("h3",{attrs:{id:"margin-重叠的意义是"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-重叠的意义是"}},[a._v("#")]),a._v(" margin 重叠的意义是  ？")]),a._v(" "),r("p",[a._v("在实际工作中，它重叠其实为我们带来了不小的麻烦")]),a._v(" "),r("p",[a._v("这个就需要从历史来看，为了排版更自然：")]),a._v(" "),r("ol",[r("li",[a._v("连续段落或列表之类，如果没有 margin 重叠，首尾项间距会和其他兄弟标签 "),r("code",[a._v("1:2")]),a._v("关系，排版不自然（兄弟重叠）")]),a._v(" "),r("li",[a._v("web 中任何地方嵌套或直接放入任何裸 div，都不会影响原来的布局（父子重叠）")]),a._v(" "),r("li",[a._v("遗落的空任意多个"),r("code",[a._v("<p>")]),a._v("元素，不要影响原来的阅读排版（空的 block 元素）")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(832),alt:"image-20200503154342391"}})]),a._v(" "),r("p",[a._v("如果没有重叠，就会导致各种间距、比例等不一")]),a._v(" "),r("p",[r("img",{attrs:{src:i(833),alt:"image-20200503154359777"}})]),a._v(" "),r("h3",{attrs:{id:"实践-善用-margin-重叠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实践-善用-margin-重叠"}},[a._v("#")]),a._v(" 实践：善用 margin 重叠")]),a._v(" "),r("p",[r("img",{attrs:{src:i(834),alt:"image-20200503154946741"}})]),a._v(" "),r("p",[a._v("的确是这样，由于有 margin 重叠，故意让它发生重叠，这就具有了健壮性；")]),a._v(" "),r("p",[a._v("建议：写垂直布局的时候，上下都使用 margin。")]),a._v(" "),r("h2",{attrs:{id:"_4-理解-css-中的-margin-auto"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-理解-css-中的-margin-auto"}},[a._v("#")]),a._v(" 4. 理解 CSS 中的 margin:auto")]),a._v(" "),r("blockquote",[r("p",[a._v("又是比较深入的课程。看上去简单，实际上比较有学问")])]),a._v(" "),r("h3",{attrs:{id:"作用机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#作用机制"}},[a._v("#")]),a._v(" 作用机制")]),a._v(" "),r("p",[a._v("元素有时候，就算没有设置 width 或则 height，也会自动填充;")]),a._v(" "),r("p",[a._v("比如，一个 div，没有设置宽高，都会自动填充满容器")]),a._v(" "),r("p",[r("img",{attrs:{src:i(835),alt:"image-20200503155309250"}})]),a._v(" "),r("p",[a._v("还有绝对定位也是一样")]),a._v(" "),r("p",[r("img",{attrs:{src:i(836),alt:"image-20200503155426640"}})]),a._v(" "),r("p",[a._v("如果设置它的 width 或 height，自动填充特性就被覆盖了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(837),alt:"image-20200503155527889"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(838),alt:"image-20200503155649171"}})]),a._v(" "),r("h3",{attrs:{id:"auto-填充-规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#auto-填充-规则"}},[a._v("#")]),a._v(" auto 填充 规则")]),a._v(" "),r("ul",[r("li",[a._v("如果一侧是固定值，一侧是 auto，auto 为剩余空间大小")]),a._v(" "),r("li",[a._v("如果两侧均是 auto，则平分剩余空间")])]),a._v(" "),r("p",[a._v("总之一句话：auto 就是用来分配剩余空间的")]),a._v(" "),r("h3",{attrs:{id:"为什么图片不居中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么图片不居中"}},[a._v("#")]),a._v(" 为什么图片不居中？")]),a._v(" "),r("p",[r("img",{attrs:{src:i(839),alt:"image-20200503160054562"}})]),a._v(" "),r("p",[a._v("它不具备让 auto 来计算剩余空间的规则")]),a._v(" "),r("p",[r("img",{attrs:{src:i(840),alt:"image-20200503160135277"}})]),a._v(" "),r("p",[a._v("现在他原本要占据一行的，使用宽度定死了，于是它就有了剩余空间")]),a._v(" "),r("h3",{attrs:{id:"为什么-margin-auto-0-无法垂直居中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么-margin-auto-0-无法垂直居中"}},[a._v("#")]),a._v(" 为什么 "),r("code",[a._v("margin:auto 0")]),a._v(" 无法垂直居中 ?")]),a._v(" "),r("blockquote",[r("p",[a._v("为什么明明容器定高，元素定高，"),r("code",[a._v("margin:auto 0")]),a._v("无法垂直居中")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(841),alt:"image-20200503160612532"}})]),a._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),r("p",[a._v("看到这里笔者大概似乎明白了：一个元素要他原本不加限制，就有某个区域的宽度，限制之后，就可以用 margin atuo 来计算被限制剩余的宽度。")]),a._v(" "),r("p",[a._v("而垂直高度，很显然不符合。")]),a._v(" "),r("p",[a._v("还有一个，auto 计算后的值如果是负值，也不会生效")])]),a._v(" "),r("blockquote",[r("p",[a._v("我们垂直方向 margin 无法实现居中了吗？ 可以的，方法还不止一种")])]),a._v(" "),r("h3",{attrs:{id:"writing-mode-与垂直居中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#writing-mode-与垂直居中"}},[a._v("#")]),a._v(" writing-mode 与垂直居中")]),a._v(" "),r("p",[r("img",{attrs:{src:i(842),alt:"image-20200503161250739"}})]),a._v(" "),r("p",[a._v("因为更改了流的方向，所以水平方向的填充属性失效了，无法水平居中了")]),a._v(" "),r("h3",{attrs:{id:"绝对定位元素的-margin-auto-居中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#绝对定位元素的-margin-auto-居中"}},[a._v("#")]),a._v(" 绝对定位元素的 "),r("code",[a._v("margin:auto")]),a._v(" 居中")]),a._v(" "),r("p",[a._v("使用拉伸特性，填满整个容器，再用宽高限制，自动填充就被强制更改了，这就符合了 auto 的定义")]),a._v(" "),r("p",[r("img",{attrs:{src:i(843),alt:"image-20200503161532212"}})]),a._v(" "),r("h2",{attrs:{id:"_5-css-margin-负值定位"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-css-margin-负值定位"}},[a._v("#")]),a._v(" 5. CSS margin 负值定位")]),a._v(" "),r("blockquote",[r("p",[a._v("margin 负值应用实例展示")])]),a._v(" "),r("h3",{attrs:{id:"margin-负值下的两端对齐"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-负值下的两端对齐"}},[a._v("#")]),a._v(" margin 负值下的两端对齐")]),a._v(" "),r("p",[a._v("主要运用了：margin 改变元素尺寸的特性")]),a._v(" "),r("p",[r("img",{attrs:{src:i(844),alt:"image-20200503161846765"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(845),alt:"image-20200503162509406"}})]),a._v(" "),r("p",[a._v("在一个没有宽的元素上，使用负值，会让它的长度变长。那么 ul 的长度由 1200 变成了 1220，再让 li 的宽度改成  "),r("code",[a._v("1220/3=406.66 - 20= 386.66")]),a._v("，由于外围容器是 1200，多出来的被截断了，看起来就是等宽的了")]),a._v(" "),r("h3",{attrs:{id:"margin-负值下的等高布局"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-负值下的等高布局"}},[a._v("#")]),a._v(" margin 负值下的等高布局")]),a._v(" "),r("p",[a._v("主要运用了：margin 改变元素占据空间")]),a._v(" "),r("p",[r("img",{attrs:{src:i(846),alt:"image-20200503163047373"}})]),a._v(" "),r("p",[a._v("把他改成负值的化，就能实现一些有意思的事情。")]),a._v(" "),r("p",[a._v("比如要实现任意一边增加或减少 n 个矩形，少的那一边能自动填充变高")]),a._v(" "),r("p",[r("img",{attrs:{src:i(847),alt:"image-20200503163401156"}})]),a._v(" "),r("p",[a._v("当给他一个很大的父值的时候，消失了；这其实是 margin 负值会改变元素的占据空间，但是由于容器有 hidden 属性，BFC 了，我们就看不到了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(848),alt:"image-20200503163325125"}})]),a._v(" "),r("p",[a._v("使用 padding 把消失的间距补回来，因为背景色可以在 padding 里面显示的")]),a._v(" "),r("p",[r("img",{attrs:{src:i(849),alt:"image-20200503163656071"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(850),alt:"image-20200503163730962"}})]),a._v(" "),r("p",[a._v("这种方式，在有 focus 的场景里面，就会出现一些问题，比如获得焦点时，页面飞掉了（focus 在锚点那一章节里面讲到过，因为重定位了）")]),a._v(" "),r("h3",{attrs:{id:"margin-负值下的两栏自适应布局"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#margin-负值下的两栏自适应布局"}},[a._v("#")]),a._v(" margin 负值下的两栏自适应布局")]),a._v(" "),r("p",[a._v("主要运用了：元素占据空间跟随 margin 移动的特性")]),a._v(" "),r("p",[a._v("这个例子在前面讲解过的")]),a._v(" "),r("p",[r("img",{attrs:{src:i(851),alt:"image-20200503164205481"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(852),alt:"image-20200503164416639"}})]),a._v(" "),r("h2",{attrs:{id:"_6-css-margin-无效情形解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-css-margin-无效情形解析"}},[a._v("#")]),a._v(" 6. CSS margin 无效情形解析")]),a._v(" "),r("blockquote",[r("p",[a._v("有时候 margin 无效，为什么呢？")])]),a._v(" "),r("p",[a._v("按照作者的经验分享一下：")]),a._v(" "),r("ol",[r("li",[r("p",[a._v("inline 水平元素的垂直 margin 无效，前提是：")]),a._v(" "),r("ol",[r("li",[a._v("非替换元素，如：不是"),r("code",[a._v("img")]),a._v(" 元素")]),a._v(" "),r("li",[a._v("正常书写模式")])])]),a._v(" "),r("li",[r("p",[a._v("margin 重叠")])])]),a._v(" "),r("p",[a._v("有可能是和父级或则兄弟元素重叠了，在前面 margin 重叠章节中有讲过")]),a._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[r("p",[a._v("table-cell 与 margin\n"),r("code",[a._v("display:table-cell/table-row")]),a._v(" 等声明的 margin 无效")]),a._v(" "),r("p",[a._v("无论是内联元素还是 block 元素，只要 "),r("code",[a._v("display:table-cell")]),a._v(" 后，margin 就会失效")])]),a._v(" "),r("li",[r("p",[a._v("position:absolute 与 margin")]),a._v(" "),r("p",[a._v("绝对定位元素非定位的 margin 值“无效”")]),a._v(" "),r("p",[a._v("什么是非定位呢？"),r("code",[a._v("left=100%、right=10%")]),a._v(" 这个叫定位，没有设置的为非定位。")]),a._v(" "),r("p",[a._v("“无效”：给如果是子元素定位了，要想有 margin 有效果，需要给父容器添加 "),r("code",[a._v("postion:relative")])]),a._v(" "),r("p",[a._v("结论：绝对定位的 margin 值一直有效，只是不像普通元素那样，可以和兄弟元素插科打混（脱离文档流，和相邻元素么有关系）")])]),a._v(" "),r("li",[r("p",[a._v("鞭长莫及导致无效")]),a._v(" "),r("p",[a._v("实际是有效，只是你看错它 margin 的对象了")])]),a._v(" "),r("li",[r("p",[a._v("内联特性导致的 margin 无效")])])]),a._v(" "),r("h3",{attrs:{id:"inline-水平元素的垂直-margin-无效"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#inline-水平元素的垂直-margin-无效"}},[a._v("#")]),a._v(" inline 水平元素的垂直 margin 无效")]),a._v(" "),r("p",[r("img",{attrs:{src:i(853),alt:"image-20200503164822240"}})]),a._v(" "),r("p",[a._v("内联元素垂直方向无效。水平方向有效")]),a._v(" "),r("h3",{attrs:{id:"table-cell-与-margin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#table-cell-与-margin"}},[a._v("#")]),a._v(" table-cell 与 margin")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin",target:"_blank",rel:"noopener noreferrer"}},[a._v("mdn 上有一段描述"),r("OutboundLink")],1)]),a._v(" "),r("blockquote",[r("p",[a._v("all elements, except elements with table display types other than table-caption, table and inline-table. It also applies to ::first-letter.")])]),a._v(" "),r("blockquote",[r("p",[a._v("margin 应用于：除了 display 为 table 相关类型（不包括 table-caption、table 以及inline-table）的所有。甚至也可以应用于 ::first-letter")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(854),alt:"image-20200503165104753"}})]),a._v(" "),r("p",[a._v("简单说，无论是内联元素还是 block 元素，只要 "),r("code",[a._v("display:table-cell")]),a._v(" 后，margin 就会失效;")]),a._v(" "),r("p",[a._v("因此无法通过 table-cell 上增加 margin 来撑开宽度，实现两栏自适应布局")]),a._v(" "),r("p",[r("img",{attrs:{src:i(855),alt:"image-20200503165358779"}})]),a._v(" "),r("p",[r("strong",[a._v("但是在替换元素上，它是个例外")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(856),alt:"image-20200503165557041"}})]),a._v(" "),r("p",[a._v("右侧的按钮，给他施加 "),r("code",[a._v("display：table-cell")]),a._v(" 后，通过 JS 获取它的类型却变成了 inline-blok 类型，margin 也是生效的")]),a._v(" "),r("h3",{attrs:{id:"osition-absolute-与-margin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#osition-absolute-与-margin"}},[a._v("#")]),a._v(" "),r("code",[a._v("osition:absolute 与 margin")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(857),alt:"image-20200503170139390"}})]),a._v(" "),r("p",[r("img",{attrs:{src:i(858),alt:"image-20200503170214081"}})]),a._v(" "),r("p",[a._v("结论：绝对定位的 margin 值一直有效，只是不像普通元素那样，可以和兄弟元素插科打混（脱离文档流，和相邻元素么有关系）")]),a._v(" "),r("h3",{attrs:{id:"鞭长莫及导致无效"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#鞭长莫及导致无效"}},[a._v("#")]),a._v(" 鞭长莫及导致无效")]),a._v(" "),r("p",[a._v("下图是通过 BFC 实现的两栏自适应布局")]),a._v(" "),r("p",[r("img",{attrs:{src:i(859),alt:"image-20200503170505516"}})]),a._v(" "),r("p",[a._v("会发现设置 margin 值，没有效果。实际上是生效了的，只是由于 float 具有破坏特性，margin 是相对于容器了，而不是图片了。把 margin 值变大，就会看到效果了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(860),alt:"image-20200503170645315"}})]),a._v(" "),r("h3",{attrs:{id:"内联特性导致的-margin-无效"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内联特性导致的-margin-无效"}},[a._v("#")]),a._v(" 内联特性导致的 margin 无效")]),a._v(" "),r("p",[r("img",{attrs:{src:i(861),alt:"image-20200503170845503"}})]),a._v(" "),r("p",[a._v("非常简单的一个结构，希望通过 margin 改变图片在容器中的位置。看似都有效果")]),a._v(" "),r("p",[r("img",{attrs:{src:i(862),alt:"image-20200503170928840"}})]),a._v(" "),r("p",[a._v("但是当 margin 小到一定程度的时候，就看上去没有效果了，这个解释就和之前的基线有关了，")]),a._v(" "),r("p",[r("img",{attrs:{src:i(863),alt:"image-20200503171109872"}})]),a._v(" "),r("p",[a._v("内联元素默认是基线对齐，添加辅助 x 后，可以看到，需要和 x 对齐。 x 是不可能跑到容器意外的。所以就失效了")]),a._v(" "),r("h2",{attrs:{id:"_7-了解-margin-start-margin-end-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-了解-margin-start-margin-end-属性"}},[a._v("#")]),a._v(" 7. 了解 margin-start/margin-end 属性")]),a._v(" "),r("blockquote",[r("p",[a._v("进一步拓展对 margin 的深广度的理解")])]),a._v(" "),r("p",[a._v("margin-start/end  是 css3 中的属性")]),a._v(" "),r("p",[a._v("结论：")]),a._v(" "),r("ul",[r("li",[a._v("正常的流向，margin-start 等同于 margin-left，两则重叠不累加")]),a._v(" "),r("li",[a._v("水平流是从右往左，margin-start 等于于 margin-right")]),a._v(" "),r("li",[a._v("在垂直流下("),r("code",[a._v("writing-mode:vertical-*")]),a._v(")，margin-start 等同于 margin-top")])]),a._v(" "),r("p",[r("img",{attrs:{src:i(864),alt:"image-20200503171436707"}})]),a._v(" "),r("p",[a._v("在正常的流向，left 和 start 是相同的表现，且他们重叠（如果都出现），改变他的流向")]),a._v(" "),r("p",[r("img",{attrs:{src:i(865),alt:"image-20200503171553297"}})]),a._v(" "),r("p",[a._v("可以看到辅助文字跑到右侧 100 px 距离了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(866),alt:"image-20200503171726619"}})]),a._v(" "),r("p",[a._v("margin-start 的出现变的更为智能，它代表了当前流向的一个 margin 效果")]),a._v(" "),r("h3",{attrs:{id:"webkit-的-margin-的其他属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webkit-的-margin-的其他属性"}},[a._v("#")]),a._v(" "),r("code",[a._v("-webkit")]),a._v(" 的 margin 的其他属性")]),a._v(" "),r("ul",[r("li",[r("code",[a._v("-webkit-margin-before")]),a._v(" : 默认流向情况下，等同于 margin-top")]),a._v(" "),r("li",[r("code",[a._v("-webkit-margin-collapse")]),a._v(" : "),r("code",[a._v("<collapse>|<discard>|separate")])])]),a._v(" "),r("p",[a._v("默认情况下，是由 margin 重叠的")]),a._v(" "),r("p",[r("img",{attrs:{src:i(867),alt:"image-20200503171933843"}})]),a._v(" "),r("p",[a._v("直接取消 margin 。看到他们在一起了")]),a._v(" "),r("p",[r("img",{attrs:{src:i(868),alt:"image-20200503172011376"}})]),a._v(" "),r("p",[a._v("还可以取消 margin 重叠，可以看到他们的 margin 距离变多了，是 30+80")]),a._v(" "),r("p",[r("img",{attrs:{src:i(869),alt:"image-20200503172106074"}})])])}),[],!1,null,null,null);t.default=s.exports},808:function(a,t,i){a.exports=i.p+"assets/img/image-20200503143136678.77d99e85.png"},809:function(a,t,i){a.exports=i.p+"assets/img/image-20200503143643842.9a13a038.png"},810:function(a,t,i){a.exports=i.p+"assets/img/image-20200503143744185.9d203a28.png"},811:function(a,t,i){a.exports=i.p+"assets/img/image-20200503143833865.d92fcb6e.png"},812:function(a,t,i){a.exports=i.p+"assets/img/image-20200503144259793.47d3eb93.png"},813:function(a,t,i){a.exports=i.p+"assets/img/image-20200503144708643.2ce4e57c.png"},814:function(a,t,i){a.exports=i.p+"assets/img/image-20200503144906126.63166d92.png"},815:function(a,t,i){a.exports=i.p+"assets/img/image-20200503145622373.9ab2569f.png"},816:function(a,t,i){a.exports=i.p+"assets/img/image-20200503150040360.295886b8.png"},817:function(a,t,i){a.exports=i.p+"assets/img/image-20200503150233874.315259f7.png"},818:function(a,t,i){a.exports=i.p+"assets/img/image-20200503151150919.18625b1b.png"},819:function(a,t,i){a.exports=i.p+"assets/img/image-20200503151357793.cae142ad.png"},820:function(a,t,i){a.exports=i.p+"assets/img/image-20200503151522775.d16d8459.png"},821:function(a,t,i){a.exports=i.p+"assets/img/image-20200503151621528.654c29ef.png"},822:function(a,t,i){a.exports=i.p+"assets/img/image-20200503152004138.53f96655.png"},823:function(a,t,i){a.exports=i.p+"assets/img/image-20200503152257055.52cbddfd.png"},824:function(a,t,i){a.exports=i.p+"assets/img/image-20200503152321914.9b5390d6.png"},825:function(a,t,i){a.exports=i.p+"assets/img/image-20200503152345926.8e98f0c0.png"},826:function(a,t,i){a.exports=i.p+"assets/img/image-20200503152409966.57f468d0.png"},827:function(a,t,i){a.exports=i.p+"assets/img/image-20200503152801925.ac951fa4.png"},828:function(a,t,i){a.exports=i.p+"assets/img/image-20200503153008856.3fe286b6.png"},829:function(a,t,i){a.exports=i.p+"assets/img/image-20200503153535691.10217ecf.png"},830:function(a,t,i){a.exports=i.p+"assets/img/image-20200503153616369.446bd101.png"},831:function(a,t,i){a.exports=i.p+"assets/img/image-20200503153641037.ac8513a2.png"},832:function(a,t,i){a.exports=i.p+"assets/img/image-20200503154342391.7f4ffd92.png"},833:function(a,t,i){a.exports=i.p+"assets/img/image-20200503154359777.0a1f2019.png"},834:function(a,t,i){a.exports=i.p+"assets/img/image-20200503154946741.d454fe22.png"},835:function(a,t,i){a.exports=i.p+"assets/img/image-20200503155309250.b7b2bd15.png"},836:function(a,t,i){a.exports=i.p+"assets/img/image-20200503155426640.dd9d608a.png"},837:function(a,t,i){a.exports=i.p+"assets/img/image-20200503155527889.211432e7.png"},838:function(a,t,i){a.exports=i.p+"assets/img/image-20200503155649171.89942f1b.png"},839:function(a,t,i){a.exports=i.p+"assets/img/image-20200503160054562.aab10375.png"},840:function(a,t,i){a.exports=i.p+"assets/img/image-20200503160135277.42c54bf0.png"},841:function(a,t,i){a.exports=i.p+"assets/img/image-20200503160612532.7a90d7fa.png"},842:function(a,t,i){a.exports=i.p+"assets/img/image-20200503161250739.f2f6d23d.png"},843:function(a,t,i){a.exports=i.p+"assets/img/image-20200503161532212.39bb4060.png"},844:function(a,t,i){a.exports=i.p+"assets/img/image-20200503161846765.17eafb13.png"},845:function(a,t,i){a.exports=i.p+"assets/img/image-20200503162509406.8b2180c6.png"},846:function(a,t,i){a.exports=i.p+"assets/img/image-20200503163047373.a91c5947.png"},847:function(a,t,i){a.exports=i.p+"assets/img/image-20200503163401156.3ac18262.png"},848:function(a,t,i){a.exports=i.p+"assets/img/image-20200503163325125.c272887e.png"},849:function(a,t,i){a.exports=i.p+"assets/img/image-20200503163656071.381fe804.png"},850:function(a,t,i){a.exports=i.p+"assets/img/image-20200503163730962.295fc47b.png"},851:function(a,t,i){a.exports=i.p+"assets/img/image-20200503164205481.a7157096.png"},852:function(a,t,i){a.exports=i.p+"assets/img/image-20200503164416639.e7eacb2e.png"},853:function(a,t,i){a.exports=i.p+"assets/img/image-20200503164822240.12c7f210.png"},854:function(a,t,i){a.exports=i.p+"assets/img/image-20200503165104753.180de94a.png"},855:function(a,t,i){a.exports=i.p+"assets/img/image-20200503165358779.2aced6c3.png"},856:function(a,t,i){a.exports=i.p+"assets/img/image-20200503165557041.981b9ccf.png"},857:function(a,t,i){a.exports=i.p+"assets/img/image-20200503170139390.f38edde2.png"},858:function(a,t,i){a.exports=i.p+"assets/img/image-20200503170214081.cdb947e8.png"},859:function(a,t,i){a.exports=i.p+"assets/img/image-20200503170505516.d4860ebb.png"},860:function(a,t,i){a.exports=i.p+"assets/img/image-20200503170645315.2d3fbacc.png"},861:function(a,t,i){a.exports=i.p+"assets/img/image-20200503170845503.202574ce.png"},862:function(a,t,i){a.exports=i.p+"assets/img/image-20200503170928840.10db9f3a.png"},863:function(a,t,i){a.exports=i.p+"assets/img/image-20200503171109872.03a0d5a2.png"},864:function(a,t,i){a.exports=i.p+"assets/img/image-20200503171436707.16a2a29a.png"},865:function(a,t,i){a.exports=i.p+"assets/img/image-20200503171553297.e5fa68c6.png"},866:function(a,t,i){a.exports=i.p+"assets/img/image-20200503171726619.4858f80b.png"},867:function(a,t,i){a.exports=i.p+"assets/img/image-20200503171933843.17a79b6b.png"},868:function(a,t,i){a.exports=i.p+"assets/img/image-20200503172011376.2cb58bbb.png"},869:function(a,t,i){a.exports=i.p+"assets/img/image-20200503172106074.a2b85c45.png"}}]);