(window.webpackJsonp=window.webpackJsonp||[]).push([[296],{1659:function(r,e,s){"use strict";s.r(e);var t=s(13),i=Object(t.a)({},(function(){var r=this,e=r.$createElement,s=r._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[s("h1",{attrs:{id:"_137-商品详情页动态渲染系统-为什么是-twemproxy-redis-而不是-redis-cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_137-商品详情页动态渲染系统-为什么是-twemproxy-redis-而不是-redis-cluster"}},[r._v("#")]),r._v(" 137. 商品详情页动态渲染系统：为什么是 twemproxy+redis 而不是 redis cluster？")]),r._v(" "),s("h2",{attrs:{id:"lvs-那块不讲解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lvs-那块不讲解"}},[r._v("#")]),r._v(" LVS 那块不讲解")]),r._v(" "),s("p",[r._v("LVS+KeepAlived 负载均衡 、MySQL+Atlas 分库分表，不讲解了，很鸡肋")]),r._v(" "),s("p",[r._v("原因：单课，聚焦，围绕一个主题去讲解，太发散了以后，什么都讲，没有围绕主题去讲解，意义不是太大")]),r._v(" "),s("p",[r._v("本课主题：商品详情页系统，亿级流量大电商，核心的东西")]),r._v(" "),s("p",[r._v("随着课程不断讲解，可能会有 10% 的出入，砍掉或者调整一些细枝末节，大的思路是 ok 的，不会改变的")]),r._v(" "),s("h2",{attrs:{id:"redis-cluster-的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster-的问题"}},[r._v("#")]),r._v(" redis cluster 的问题")]),r._v(" "),s("p",[r._v("之前讲解过 "),s("RouterLink",{attrs:{to:"/cache-pdp/redis/028.html"}},[r._v("redis cluster")]),r._v("，那么他的优缺点如下")],1),r._v(" "),s("ol",[s("li",[r._v("不好做读写分离")])]),r._v(" "),s("p",[r._v("读写请求全部落到主实例上的，如果要扩展写 QPS，或者是扩展读 QPS，都是需要扩展主实例的数量，从实例就是一个用做热备 + 高可用\n2. 不好跟 nginx+lua 直接整合")]),r._v(" "),s("p",[r._v("lua->redis 的 client api，但是不太支持 redis cluster，中间就要走一个中转的 java 服务\n3. 不好做树状集群结构")]),r._v(" "),s("p",[r._v("比如 redis 主集群一主三从双机房架构，redis cluster 不太好做成那种树状结构\n4. 优点就是方便")]),r._v(" "),s("p",[r._v("相当于是上下线节点、集群扩容、运维工作、高可用自动切换，比较方便")]),r._v(" "),s("h2",{attrs:{id:"twemproxy-redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#twemproxy-redis"}},[r._v("#")]),r._v(" twemproxy+redis")]),r._v(" "),s("p",[r._v("twemproxy+redis 做集群，redis 部署多个主实例，每个主实例可以挂载一些 redis 从实例，如果将不同的数据分片写入不同的 redis 主实例中，twemproxy 这么一个缓存集群的中间件")]),r._v(" "),s("ol",[s("li",[r._v("上线下线节点，有一些手工维护集群的成本")]),r._v(" "),s("li",[r._v("支持 redis 集群 + 读写分离")])]),r._v(" "),s("p",[r._v("就是最基本的多个 redis 主实例，数据落到哪一个实例上是 twemproxy 这个中间件来决定的，java/nginx+lua 客户端，是连接 twemproxy 中间件的。每个 redis 主实例就挂载了多个 redis 从实例，高可用 -> 可以使用哨兵")]),r._v(" "),s("p",[r._v("redis cluster 读写都要落到主实例的限制，你自己可以决定写主，读从，等等\n3. 支持 redis cli 协议，可以直接跟 nginx+lua 整合\n4. 可以搭建树状集群结构")]),r._v(" "),s("h2",{attrs:{id:"如何选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何选择"}},[r._v("#")]),r._v(" 如何选择？")]),r._v(" "),s("p",[r._v("就是看你的架构中是否能容忍 redis cluster 的前 3 个问题")])])}),[],!1,null,null,null);e.default=i.exports}}]);