(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{1185:function(s,t,a){s.exports=a.p+"assets/img/0ff443c163f4ac3d356ed1e9890b43f9.77be7ca8.png"},1186:function(s,t,a){s.exports=a.p+"assets/img/96c77d32cc138132591e15f24acc6565.2be2c2cd.png"},1187:function(s,t,a){s.exports=a.p+"assets/img/6f7cb3fdfb4394ba4599c4ecf0c73f9c.887d60d3.png"},2013:function(s,t,a){"use strict";a.r(t);var n=a(13),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"git-对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git-对象"}},[s._v("#")]),s._v(" Git 对象")]),s._v(" "),n("p",[n("strong",[s._v("Git 是一个内容寻址文件系统")]),s._v("。 看起来很酷， 但这是什么意思呢？ 这意味着，"),n("strong",[s._v("Git 的核心部分是一个简单的键值对数据库（key-value data store）")]),s._v("。 你可以向该数据库插入任意类型的内容，它会返回一个键值，通过该键值可以在任意时刻再次检索（retrieve）该内容。 可以通过底层命令 "),n("code",[s._v("hash-object")]),s._v(" 来演示上述效果——该命令可将任意数据保存于  "),n("code",[s._v(".git")]),s._v("  目录，并返回相应的键值。")]),s._v(" "),n("p",[s._v("首先，我们需要初始化一个新的 Git 版本库，并确认 "),n("code",[s._v("objects")]),s._v(" 目录为空：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\nInitialized empty Git repository "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /tmp/test/.git/\n\n$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" .git/objects\n.git/objects\n.git/objects/info\n.git/objects/pack\n\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" .git/objects -type f\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("可以看到 Git 对 objects 目录进行了初始化，并创建了 pack 和 info 子目录，但均为空。 接着，往 Git 数据库存入一些文本：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test content'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" hash-object -w --stdin\nd670460b4b4aece5915caf5c68d12f560a9fe3e4\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("code",[s._v("-w")]),s._v("  选项指示 "),n("code",[s._v("hash-object")]),s._v(" 命令 "),n("strong",[s._v("存储数据对象")]),s._v("；若不指定此选项，则该命令仅返回对应的键值。")]),s._v(" "),n("p",[n("code",[s._v("–stdin")]),s._v("  选项则 "),n("strong",[s._v("指示该命令从标准输入读取内容")]),s._v("；若不指定此选项，则须在命令尾部给出待存储文件的路径。")]),s._v(" "),n("p",[s._v("该命令输出一个长度为 "),n("strong",[s._v("40 个字符的校验和")]),s._v("。 这是一个 SHA-1 哈希值——一个将待存储的数据外加一个头部信息（header）一起做 SHA-1 校验运算而得的校验和。后文会简要讨论该头部信息。 现在我们可以查看 Git 是如何存储数据的：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" .git/objects -type f\n.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("可以在 objects 目录下看到一个文件。 这就是开始时 Git 存储内容的方式——一个文件对应一条内容，以该内容加上特定头部信息一起的 SHA-1 校验和为文件命名。 "),n("strong",[s._v("校验和的前两个字符用于命名子目录")]),s._v("，"),n("strong",[s._v("余下的 38 个字符则用作文件名。")])]),s._v(" "),n("p",[s._v("可以通过 "),n("code",[s._v("cat-file")]),s._v(" 命令从 Git 那里取回数据。 这个命令简直就是一把剖析 Git 对象的瑞士军刀。 为 "),n("code",[s._v("cat-file")]),s._v("  指定  "),n("code",[s._v("-p")]),s._v("  选项可指示该命令自动判断内容的类型，并为我们显示格式友好的内容：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -p 后面的路径不是绝对路径，是校验和")]),s._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p d670460b4b4aece5915caf5c68d12f560a9fe3e4\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" content\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("至此，你已经掌握了如何向 Git 中存入内容，以及如何将它们取出。 我们同样可以将这些操作应用于文件中的内容。 例如，"),n("strong",[s._v("可以对一个文件进行简单的版本控制")]),s._v("。 首先，创建一个新文件并将其内容存入数据库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'version 1'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.txt\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" hash-object -w test.txt\n83baae61804e65cc73a7201a7252750c76066a30\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("接着，向文件里写入新内容，并再次将其存入数据库：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'version 2'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.txt\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" hash-object -w test.txt\n1f7a7a472abf3dd9643fd615f6da379c4acb3e3a\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("数据库记录下了该文件的两个不同版本")]),s._v("，当然之前我们存入的第一条内容也还在：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" .git/objects -type f\n.git/objects/1f/7a7a472abf3dd9643fd615f6da379c4acb3e3a\n.git/objects/83/baae61804e65cc73a7201a7252750c76066a30\n.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("现在可以把文件内容恢复到第一个版本：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p 83baae61804e65cc73a7201a7252750c76066a30 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.txt\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" test.txt\nversion "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("或者第二个版本：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" test.txt\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" test.txt\nversion "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("然而，"),n("strong",[s._v("记住文件的每一个版本所对应的 SHA-1 值并不现实")]),s._v("；另一个问题是，在这个（简单的版本控制）系统中，"),n("strong",[s._v("文件名并没有被保存——我们仅保存了文件的内容")]),s._v("。 上述类型的对象我们称之为  "),n("strong",[s._v("数据对象（blob object）")]),s._v("。 利用 "),n("code",[s._v("cat-file -t")]),s._v("  命令，可以让 Git 告诉我们其内部存储的任何对象类型，只要给定该对象的 SHA-1 值：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ git cat-file -t 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a\nblob\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"树对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#树对象"}},[s._v("#")]),s._v(" 树对象")]),s._v(" "),n("p",[s._v("接下来要探讨的对象类型是 "),n("strong",[s._v("树对象（tree object）")]),s._v("，"),n("strong",[s._v("它能解决文件名保存的问题，也允许我们将多个文件组织到一起")]),s._v("。 Git 以一种类似于 UNIX 文件系统的方式存储内容，但作了些许简化。 所有内容均以 "),n("strong",[s._v("树对象")]),s._v(" 和 "),n("strong",[s._v("数据对象")]),s._v(" 的形式存储：")]),s._v(" "),n("ul",[n("li",[s._v("树对象：树对象对应了 UNIX 中的目录项。")]),s._v(" "),n("li",[s._v("数据对象：则大致上对应了 inodes 或文件内容。")])]),s._v(" "),n("p",[s._v("一个树对象包含了一条或多条 "),n("strong",[s._v("树对象记录（tree entry）")]),s._v("，每条记录含有一个 "),n("strong",[s._v("指向数据对象或者子树对象的 SHA-1 指针")]),s._v("，以及相应的模式、类型、文件名信息。 例如，某项目当前对应的最新树对象可能是这样的：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p master^"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("tree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob a906cb2a4a904a152e80877d4088654daad0c859      README\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob 8f94139338f9404f26296befa88755fc2598c289      Rakefile\n040000 tree 99f1a6d12cb4b6f19c8655fca46c3ecf317074e0      lib\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[n("code",[s._v("master^{tree}")]),s._v("  语法表示 master 分支上最新的提交所指向的树对象。 "),n("strong",[s._v("请注意，lib 子目录（所对应的那条树对象记录）并不是一个数据对象，而是一个指针")]),s._v("，其指向的是另一个树对象：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p 99f1a6d12cb4b6f19c8655fca46c3ecf317074e0\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob 47c6340d6459e05787f644c2447d2595f5d3a54b      simplegit.rb\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("从概念上讲，Git 内部存储的数据有点像这样：")]),s._v(" "),n("p",[s._v("简化版的 Git 数据模型示意图")]),s._v(" "),n("p",[n("img",{attrs:{src:a(1185),alt:"简化版的 Git 数据模型。"}})]),s._v(" "),n("p",[s._v("你可以轻松创建自己的树对象。 通常，**Git 根据某一时刻暂存区（即 index 区域，下同）**所表示的状态创建并记录一个对应的树对象，如此重复便可依次记录（某个时间段内）一系列的树对象。 因此，"),n("strong",[s._v("为创建一个树对象，首先需要通过暂存一些文件来创建一个暂存区")]),s._v("。 可以通过底层命令 "),n("code",[s._v("update-index")]),s._v("  为一个单独文件——我们的 test.txt 文件的首个版本——创建一个暂存区。 利用该命令，可以把 test.txt 文件的首个版本人为地加入一个新的暂存区。 必须为上述命令指定 "),n("code",[s._v("–add")]),s._v("  选项，因为此前该文件并不在暂存区中（我们甚至都还没来得及创建一个暂存区呢）；同样必需的还有 "),n("code",[s._v("–cacheinfo")]),s._v(" 选项，因为将要添加的文件位于 Git 数据库中，而不是位于当前目录下。 同时，需要指定文件模式、SHA-1 与文件名：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# update-index 更新暂存区")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- add：添加到暂存区")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --cacheinfo：添加到 Git 数据库中，而不是当前目录下")]),s._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index --add --cacheinfo "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" 83baae61804e65cc73a7201a7252750c76066a30 test.txt\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("本例中，我们指定的文件模式为 "),n("strong",[s._v("100644，表明这是一个普通文件")]),s._v("。 其他选择包括：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("100755，表示一个可执行文件；")])]),s._v(" "),n("li",[n("p",[s._v("120000，表示一个符号链接。")])])]),s._v(" "),n("p",[s._v("这里的文件模式参考了常见的 UNIX 文件模式，但远没那么灵活——上述三种模式即是 Git 文件（即数据对象）的所有合法模式（当然，还有其他一些模式，但用于目录项和子模块）。")]),s._v(" "),n("p",[s._v("现在，可以通过 "),n("code",[s._v("write-tree")]),s._v(" 命令 "),n("strong",[s._v("将暂存区内容写入一个树对象")]),s._v("。 此处无需指定 "),n("code",[s._v("-w")]),s._v("  选项——如果某个树对象此前并不存在的话，当调用 "),n("code",[s._v("write-tree")]),s._v("  命令时，它会根据当前暂存区状态自动创建一个新的树对象：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" write-tree\nd8329fc1cc938780ffdd9f94e0d364e0ea74f579\n\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p d8329fc1cc938780ffdd9f94e0d364e0ea74f579\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob 83baae61804e65cc73a7201a7252750c76066a30      test.txt\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("不妨验证一下它确实是一个树对象：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -t d8329fc1cc938780ffdd9f94e0d364e0ea74f579\ntree\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("接着我们来创建一个新的树对象，它包括 test.txt 文件的第二个版本，以及一个新的文件：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new file'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" new.txt\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index --cacheinfo "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a test.txt\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index test.txt\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" update-index --add new.txt\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("暂存区现在包含了 test.txt 文件的新版本，和一个新文件：new.txt。 记录下这个目录树（将当前暂存区的状态记录为一个树对象），然后观察它的结构：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" write-tree\n0155eb4229851634a0f03eb265b69f5a2d56f341\n\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p 0155eb4229851634a0f03eb265b69f5a2d56f341\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob fa49b077972391ad58037050f2a75f74e3671e92      new.txt\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a      test.txt\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("我们注意到，新的树对象包含两条文件记录，同时 test.txt 的 SHA-1 值（1f7a7a）是先前值的 “第二版”。 只是为了好玩：你可以将第一个树对象加入第二个树对象，使其成为新的树对象的一个子目录。 通过调用 "),n("code",[s._v("read-tree")]),s._v("  命令，可以把树对象读入暂存区。 本例中，可以通过对 "),n("code",[s._v("read-tree")]),s._v(" 指定 "),n("code",[s._v("–prefix")]),s._v("  选项，将一个已有的树对象作为子树读入暂存区：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" read-tree --prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bak d8329fc1cc938780ffdd9f94e0d364e0ea74f579\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" write-tree\n3c4e9cd789d88d8d89c1073707c3585e41b0e614\n\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p 3c4e9cd789d88d8d89c1073707c3585e41b0e614\n040000 tree d8329fc1cc938780ffdd9f94e0d364e0ea74f579      bak\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob fa49b077972391ad58037050f2a75f74e3671e92      new.txt\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v(" blob 1f7a7a472abf3dd9643fd615f6da379c4acb3e3a      test.txt\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("如果基于这个新的树对象创建一个工作目录，你会发现工作目录的根目录包含两个文件以及一个名为 bak 的子目录，该子目录包含 test.txt 文件的第一个版本。 可以认为 Git 内部存储着的用于表示上述结构的数据是这样的：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(1186),alt:"当前 Git 的数据内容结构。"}})]),s._v(" "),n("h2",{attrs:{id:"提交对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#提交对象"}},[s._v("#")]),s._v(" 提交对象")]),s._v(" "),n("p",[s._v("现在有 "),n("strong",[s._v("三个树对象")]),s._v("，分别代表了我们想要跟踪的不同项目快照。然而问题依旧：若想重用这些快照，你必须记住所有三个 SHA-1 哈希值。 并且，你也完全不知道是谁保存了这些快照，在什么时刻保存的，以及为什么保存这些快照。 而以上这些，"),n("strong",[s._v("正是提交对象（commit object）能为你保存的基本信息")]),s._v("。")]),s._v(" "),n("p",[s._v("可以通过调用 "),n("code",[s._v("commit-tree")]),s._v("  命令创建一个提交对象，为此需要指定一个树对象的 SHA-1 值，以及该提交的父提交对象（如果有的话）。 我们从之前创建的第一个树对象开始：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first commit'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit-tree d8329f\nfdf4fc3344e67ab068f836878b6c4951e3b15f3d\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("现在可以通过 cat-file 命令查看这个新提交对象：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cat-file -p fdf4fc3\ntree d8329fc1cc938780ffdd9f94e0d364e0ea74f579\nauthor Scott Chacon "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1243040974")]),s._v(" -0700\ncommitter Scott Chacon "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1243040974")]),s._v(" -0700\n\nfirst commit\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("提交对象的格式很简单："),n("strong",[s._v("它先指定一个顶层树对象，代表当前项目快照")]),s._v("；"),n("strong",[s._v("然后是作者/提交者信息")]),s._v("（依据你的 user.name 和 user.email 配置来设定，外加一个时间戳）；"),n("strong",[s._v("留空一行，最后是提交注释")]),s._v("。")]),s._v(" "),n("p",[s._v("接着，我们将创建另两个提交对象，它们分别引用各自的上一个提交（作为其父提交对象）：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'second commit'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit-tree 0155eb -p fdf4fc3\ncac0cab538b970a37ea1e769cbbde608743bc96d\n$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'third commit'")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit-tree 3c4e9c -p cac0cab\n1a410efbd13591db07496601ebc7a059dd55cfe9\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这三个提交对象分别指向之前创建的三个树对象快照中的一个。 现在，如果对最后一个提交的 SHA-1 值运行 git log 命令，会出乎意料的发现，你已有一个货真价实的、可由 "),n("code",[s._v("git log")]),s._v(" 查看的 Git 提交历史了：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --stat 1a410e\ncommit 1a410efbd13591db07496601ebc7a059dd55cfe9\nAuthor: Scott Chacon "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nDate:   Fri May "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":15:24 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2009")]),s._v(" -0700\n\n\tthird commit\n\n bak/test.txt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" +\n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" changed, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" insertion"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ncommit cac0cab538b970a37ea1e769cbbde608743bc96d\nAuthor: Scott Chacon "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nDate:   Fri May "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":14:29 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2009")]),s._v(" -0700\n\n\tsecond commit\n\n new.txt  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" +\n test.txt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" +-\n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" files changed, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" insertions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" deletion"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ncommit fdf4fc3344e67ab068f836878b6c4951e3b15f3d\nAuthor: Scott Chacon "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nDate:   Fri May "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":09:34 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2009")]),s._v(" -0700\n\n    first commit\n\n test.txt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" +\n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" changed, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" insertion"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("太神奇了： 就在刚才，你没有借助任何上层命令，仅凭几个底层操作便完成了一个 Git 提交历史的创建。 这就是每次我们运行 "),n("code",[s._v("git add")]),s._v("  和  "),n("code",[s._v("git commit")]),s._v("  命令时， "),n("strong",[s._v("Git 所做的实质工作——将被改写的文件保存为数据对象")]),s._v("，"),n("strong",[s._v("更新暂存区，记录树对象")]),s._v("，"),n("strong",[s._v("最后创建一个指明了顶层树对象和父提交的提交对象")]),s._v("。 这三种主要的 Git 对象—— "),n("strong",[s._v("数据对象、树对象、提交对象")]),s._v("——最初均以单独文件的形式保存在  "),n("code",[s._v(".git/objects")]),s._v("  目录下。 下面列出了目前示例目录内的所有对象，辅以各自所保存内容的注释：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" .git/objects -type f\n.git/objects/01/55eb4229851634a0f03eb265b69f5a2d56f341 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tree 2")]),s._v("\n.git/objects/1a/410efbd13591db07496601ebc7a059dd55cfe9 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit 3")]),s._v("\n.git/objects/1f/7a7a472abf3dd9643fd615f6da379c4acb3e3a "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test.txt v2")]),s._v("\n.git/objects/3c/4e9cd789d88d8d89c1073707c3585e41b0e614 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tree 3")]),s._v("\n.git/objects/83/baae61804e65cc73a7201a7252750c76066a30 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# test.txt v1")]),s._v("\n.git/objects/ca/c0cab538b970a37ea1e769cbbde608743bc96d "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit 2")]),s._v("\n.git/objects/d6/70460b4b4aece5915caf5c68d12f560a9fe3e4 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 'test content'")]),s._v("\n.git/objects/d8/329fc1cc938780ffdd9f94e0d364e0ea74f579 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tree 1")]),s._v("\n.git/objects/fa/49b077972391ad58037050f2a75f74e3671e92 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# new.txt")]),s._v("\n.git/objects/fd/f4fc3344e67ab068f836878b6c4951e3b15f3d "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit 1")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("如果跟踪所有的内部指针，将得到一个类似下面的对象关系图：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(1187),alt:"你的 Git 目录下的所有对象。"}})]),s._v(" "),n("h2",{attrs:{id:"对象存储"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象存储"}},[s._v("#")]),s._v(" 对象存储")]),s._v(" "),n("p",[s._v("前文曾提及，"),n("strong",[s._v("在存储内容时，会有个头部信息一并被保存")]),s._v("。 让我们略花些时间来看看 Git 是如何存储其对象的。 通过在 Ruby 脚本语言中交互式地演示，你将看到一个数据对象——本例中是字符串 “what is up, doc?” ——是如何被存储的。")]),s._v(" "),n("p",[s._v("可以通过 irb 命令启动 Ruby 的交互模式：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ irb\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" content "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"what is up, doc?"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"what is up, doc?"')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("Git 以对象类型作为开头来构造一个头部信息，本例中是一个 “blob” 字符串。 接着 Git 会添加一个空格，随后是数据内容的长度，最后是一个空字节（null byte）：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('>> header = "blob #{content.length}\\0"\n=> "blob 16\\u0000"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("Git 会将上述头部信息和原始数据拼接起来，并计算出这条新内容的 SHA-1 校验和。 在 Ruby 中可以这样计算 SHA-1 值——先通过 "),n("code",[s._v("require")]),s._v("  命令导入 "),n("code",[s._v("SHA-1 digest")]),s._v("  库，然后对目标字符串调用 "),n("code",[s._v("Digest::SHA1.hexdigest()：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('>> store = header + content\n=> "blob 16\\u0000what is up, doc?"\n>> require \'digest/sha1\'\n=> true\n>> sha1 = Digest::SHA1.hexdigest(store)\n=> "bd9dbf5aae1a3862dd1526723246b20206e5fc37"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("strong",[s._v("Git 会通过 zlib 压缩这条新内容")]),s._v("。在 Ruby 中可以借助 zlib 库做到这一点。 先导入相应的库，然后对目标内容调用 "),n("code",[s._v("Zlib::Deflate.deflate()：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(">> require 'zlib'\n=> true\n>> zlib_content = Zlib::Deflate.deflate(store)\n=> \"x\\x9CK\\xCA\\xC9OR04c(\\xCFH,Q\\xC8,V(-\\xD0QH\\xC9O\\xB6\\a\\x00_\\x1C\\a\\x9D\"\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("最后**，需要将这条经由 zlib 压缩的内容写入磁盘上的某个对象**。 要先确定待写入对象的路径（SHA-1 值的前两个字符作为子目录名称，后 38 个字符则作为子目录内文件的名称）。 如果该子目录不存在，可以通过 Ruby 中的 "),n("code",[s._v("FileUtils.mkdir_p()")]),s._v("  函数来创建它。 接着，通过  "),n("code",[s._v("File.open()")]),s._v(" 打开这个文件。最后，对上一步中得到的文件句柄调用 "),n("code",[s._v("write()")]),s._v(" 函数，以向目标文件写入之前那条 zlib 压缩过的内容：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" path "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.git/objects/'")]),s._v(" + sha1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" + "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" + sha1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2,38")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".git/objects/bd/9dbf5aae1a3862dd1526723246b20206e5fc37"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" require "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fileutils'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" FileUtils.mkdir_p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("File.dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".git/objects/bd"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" File.open"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path, "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'w'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f.write zlib_content "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("就是这样——你已创建了一个有效的 Git 数据对象。 所有的 Git 对象均以这种方式存储，区别仅在于类型标识——另两种对象类型的头部信息以字符串 "),n("strong",[s._v("commit")]),s._v(" 或  "),n("strong",[s._v("tree")]),s._v(" 开头，而不是 "),n("strong",[s._v("blob")]),s._v("。 另外，虽然数据对象的内容几乎可以是任何东西，但提交对象和树对象的内容却有各自固定的格式。")]),s._v(" "),n("p",[s._v("完整的演示存储如下")]),s._v(" "),n("div",{staticClass:"language-ruby line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-ruby"}},[n("code",[s._v("$ irb\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("001")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("002")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" content "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"what is up, doc?"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"what is up, doc?"')]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("003")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" header "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blob '),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v('\\0"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blob 16\\u0000"')]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("004")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" store "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" header "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" content\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blob 16\\u0000what is up, doc?"')]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("005")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("require")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'digest/sha1'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("006")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sha1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Digest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SHA1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hexdigest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bd9dbf5aae1a3862dd1526723246b20206e5fc37"')]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("007")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("require")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zlib'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("008")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" zlib_content "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Zlib")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Deflate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deflate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x\\x9CK\\xCA\\xC9OR04c(\\xCFH,Q\\xC8,V(-\\xD0QH\\xC9O\\xB6\\a\\x00_\\x1C\\a\\x9D"')]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("009")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" path "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.git/objects/'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sha1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" sha1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("38")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".git/objects/bd/9dbf5aae1a3862dd1526723246b20206e5fc37"')]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("010")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("require")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fileutils'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("011")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FileUtils")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mkdir_p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("File")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dirname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('".git/objects/bd"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("012")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("File")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("open"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'w'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("f"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("write zlib_content "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),s._v("\nirb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("013")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);