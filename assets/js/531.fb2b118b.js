(window.webpackJsonp=window.webpackJsonp||[]).push([[531],{2001:function(s,t,a){"use strict";a.r(t);var e=a(13),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"凭证存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#凭证存储"}},[s._v("#")]),s._v(" 凭证存储")]),s._v(" "),a("p",[s._v("如果你使用的是 "),a("strong",[s._v("SSH 方式连接远端")]),s._v("，"),a("strong",[s._v("并且设置了一个没有口令的密钥")]),s._v("，这样就可以在不输入用户名和密码的情况下安全地传输数据。 然而，这对 HTTP 协议来说是不可能的 —— 每一个连接都是需要用户名和密码的。 这在使用双重认证的情况下会更麻烦，因为你需要输入一个随机生成并且毫无规律的 token 作为密码。")]),s._v(" "),a("p",[s._v("幸运的是，Git 拥有一个凭证系统来处理这个事情。 下面有一些 Git 的选项：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("默认所有都不缓存。 每一次连接都会询问你的用户名和密码。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("cache")]),s._v("：")]),s._v(" "),a("p",[s._v("该模式会将凭证存放在内存中一段时间。 密码永远不会被存储在磁盘中，并且在 15 分钟后从内存中清除。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("store")]),s._v("：")]),s._v(" "),a("p",[s._v("该模式会将凭证 "),a("strong",[s._v("用明文的形式存放在磁盘中")]),s._v("，并且永不过期。 这意味着除非你修改了你在 Git 服务器上的密码，否则你永远不需要再次输入你的凭证信息。 这种方式的缺点是你的密码是用明文的方式存放在你的 home 目录下。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("osxkeychain")]),s._v("：mac 系统支持")]),s._v(" "),a("p",[a("strong",[s._v("它会将凭证缓存到你系统用户的钥匙串中")]),s._v("。 这种方式将凭证存放在磁盘中，并且永不过期，但是是被加密的，这种加密方式与存放 HTTPS 凭证以及 Safari 的自动填写是相同的。")])]),s._v(" "),a("li",[a("p",[s._v("Windows 版本钥匙串：")]),s._v(" "),a("p",[s._v("你可以安装一个叫做 "),a("a",{attrs:{href:"https://gitcredentialstore.codeplex.com",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[s._v("winstore")]),a("OutboundLink")],1),s._v(" 的辅助工具。这和上面的 osxkeychain 十分相似，但是是使用 Windows Credential Store 来控制敏感信息。")])])]),s._v(" "),a("p",[s._v("你可以设置 Git 的配置来选择上述的一种方式")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global credential.helper cache\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("部分辅助工具有一些选项：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("store")]),s._v(" 模式可以接受一个 "),a("code",[s._v("–file <path>")]),s._v(" 参数，可以自定义存放密码的文件路径（默认是 "),a("code",[s._v("~/.git-credentials")]),s._v("）。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("cache")]),s._v("  模式有  "),a("code",[s._v("–timeout <seconds>")]),s._v(" 参数，可以设置后台进程的存活时间（默认是 “900”，也就是 15 分钟）。")])])]),s._v(" "),a("p",[s._v("下面是一个配置  "),a("code",[s._v("store")]),s._v(" 模式自定义路径的例子：")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global credential.helper store --file ~/.my-credentials\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("Git 甚至允许你配置多个辅助工具")]),s._v("。 当查找特定服务器的凭证时，Git 会按顺序查询，并且在找到第一个回答时停止查询。 当保存凭证时，Git 会将用户名和密码发送给 "),a("strong",[s._v("所有")]),s._v(" 配置列表中的辅助工具，它们会按自己的方式处理用户名和密码。 如果你在闪存上有一个凭证文件，但又希望在该闪存被拔出的情况下使用内存缓存来保存用户名密码，"),a("code",[s._v(".gitconfig")]),s._v("  配置文件如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[credential]\n    helper = store --file /mnt/thumbdrive/.git-credentials\n    helper = cache --timeout 30000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"底层实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#底层实现"}},[s._v("#")]),s._v(" 底层实现")]),s._v(" "),a("p",[s._v("这些是如何实现的呢？ Git 凭证辅助工具系统的命令是 "),a("code",[s._v("git credential")]),s._v("，这个命令接收一个参数，并通过标准输入获取更多的参数。")]),s._v(" "),a("p",[s._v("举一个例子更容易理解。 我们假设已经配置好一个凭证辅助工具，这个辅助工具保存了 mygithost 的凭证信息。 下面是一个使用 "),a("code",[s._v("fill")]),s._v(" 命令的会话，当 Git 尝试寻找一个服务器的凭证时就会被调用。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" credential fill\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 命令输入完成后，会等待我们输入，一行一个")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("protocol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mygithost\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bob\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s3cre7\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再回车一个空行，就完成了配置，打印如下信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果没有找到凭证，Git 会询问用户的用户名和密码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("protocol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mygithost\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bob\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s3cre7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("凭证系统实际调用的程序和 Git 本身是分开的；具体是哪一个以及如何调用与 "),a("code",[s._v("credential.helper")]),s._v("  配置的值有关。 这个配置有多种格式：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("配置值")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("行为")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("foo")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("执行 "),a("code",[s._v("git-credential-foo")])])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("foo -a –opt=bcd")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("执行 "),a("code",[s._v("git-credential-foo -a –opt=bcd")])])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("/absolute/path/foo -xyz")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("执行  "),a("code",[s._v("/absolute/path/foo -xyz")])])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("!f() { echo “password=s3cre7”; }; f")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("! 后面的代码会在shell执行")])])])])]),s._v(" "),a("p",[s._v("上面描述的辅助工具可以被称做  "),a("code",[s._v("git-credential-cache")]),s._v("、"),a("code",[s._v("git-credential-store")]),s._v(" 之类，我们可以配置它们来接受命令行参数。 通常的格式是  "),a("code",[s._v("git-credential-foo [args] <action>")]),s._v("  标准输入/输出协议和  "),a("code",[s._v("git-credential")]),s._v("  一样，但它们使用的是一套稍微不太一样的行为：")]),s._v(" "),a("ul",[a("li",[s._v("get 是请求输入一对用户名和密码。")]),s._v(" "),a("li",[s._v("store 是请求保存一个凭证到辅助工具的内存。")]),s._v(" "),a("li",[s._v("erase 会将给定的证书从辅助工具内存中清除。")])]),s._v(" "),a("p",[s._v("对于 store 和 erase 两个行为是不需要返回数据的（Git 也会忽略掉）。 然而对于 get，Git 对辅助工具的返回信息十分感兴趣。")]),s._v(" "),a("p",[s._v("如果辅助工具没有任何有用的信息，它可以直接退出而不需要输出任何东西，但如果它有这些信息，它在提供的信息后面增加它所拥有的信息。 这些输出会被视为一系列的赋值语句；每一个提供的数据都会将 Git 已有的数据替换掉。")]),s._v(" "),a("p",[s._v("这有一个和上面一样的例子，但是跳过了 "),a("code",[s._v("git-credential")]),s._v("  这一步，直接到 "),a("code",[s._v("git-credential-store")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" credential-store --file ~/git.store store "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("protocol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mygithost\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bob\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s3cre7\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" credential-store --file ~/git.store get "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("protocol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mygithost\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bob\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("s3cre7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ol",[a("li",[s._v("我们告诉  "),a("code",[s._v("git-credential-store")]),s._v("  去保存凭证：当访问 https://mygithost 时使用用户名 "),a("code",[s._v("bob")]),s._v("，密码是 "),a("code",[s._v("s3cre7")]),s._v("。")]),s._v(" "),a("li",[s._v("现在我们取出这个凭证。 我们提供连接这部分的信息（https://mygithost）以及一个空行。")]),s._v(" "),a("li",[a("code",[s._v("git-credential-store")]),s._v(" 输出我们之前保存的用户名和密码。")])]),s._v(" "),a("p",[a("code",[s._v("~/git.store 文件的内容类似：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("https://bob:s3cre7@mygithost\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("仅仅是一系列包含凭证信息URL组成的行。 osxkeychain 和 winstore 辅助工具使用它们后端存储的原生格式，而 cache 使用它的内存格式（其他进程无法读取）。")]),s._v(" "),a("h2",{attrs:{id:"自定义凭证缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义凭证缓存"}},[s._v("#")]),s._v(" 自定义凭证缓存")]),s._v(" "),a("p",[s._v("已经知道 "),a("code",[s._v("git-credential-store")]),s._v(" 之类的是和 Git 是相互独立的程序，就不难理解 Git 凭证辅助工具可以是 "),a("em",[s._v("任意")]),s._v(" 程序。 虽然 Git 提供的辅助工具覆盖了大多数常见的使用场景，但并不能满足所有情况。 比如，假设你的整个团队共享一些凭证，也许是在部署时使用。 这些凭证是保存在一个共享目录里，由于这些凭证经常变更，所以你不想把它们复制到你自己的凭证仓库中。 现有的辅助工具无法满足这种情况；来看看我们如何自己实现一个。 这个程序应该拥有几个核心功能：")]),s._v(" "),a("ol",[a("li",[s._v("我们唯一需要关注的行为是 "),a("code",[s._v("get；store 和 erase")]),s._v("  是写操作，所以当接受到这两个请求时我们直接退出即可。")]),s._v(" "),a("li",[s._v("共享的凭证文件格式和 "),a("code",[s._v("git-credential-store")]),s._v(" 使用的格式相同。")]),s._v(" "),a("li",[s._v("凭证文件的路径一般是固定的，但我们应该允许用户传入一个自定义路径以防万一。")])]),s._v(" "),a("p",[s._v("我们再一次使用 Ruby 来编写这个扩展，但只要 Git 能够执行最终的程序，任何语言都是可以的。 这是我们的凭证辅助工具的完整代码：")]),s._v(" "),a("div",{staticClass:"language-ruby line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env ruby")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("require")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'optparse'")]),s._v("\n\npath "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("expand_path "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~/.git-credentials'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OptionParser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("opts"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n    opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("banner "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USAGE: git-credential-read-only [options] <action>'")]),s._v("\n    opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-f'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--file PATH'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Specify path for backing store'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("argpath"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n        path "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("expand_path argpath\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parse"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nexit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unless")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARGV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("downcase "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'get'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unless")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exists"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" path\n\nknown "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" line "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("STDIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gets\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("strip "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n    k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("v "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("strip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("split "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'='")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n    known"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" v\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("readlines"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("each")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("fileline"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" prot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("pass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("host "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fileline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("scan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/^(.*?):\\/\\/(.*?):(.*?)@(.*)$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("first\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" prot "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" known"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'protocol'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" host "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" known"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'host'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        puts "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"protocol='),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("prot"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v('"')]),s._v("\n        puts "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host='),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v('"')]),s._v("\n        puts "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username='),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("user"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v('"')]),s._v("\n        puts "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"password='),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("#{")]),s._v("pass"),a("span",{pre:!0,attrs:{class:"token delimiter tag"}},[s._v("}")])]),s._v('"')]),s._v("\n        exit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("ol",[a("li",[s._v("我们在这里解析命令行参数，允许用户指定输入文件，默认是 "),a("code",[s._v("~/.git-credentials")]),s._v(".")]),s._v(" "),a("li",[s._v("这个程序只有在接受到 get 行为的请求并且后端存储的文件存在时才会有输出。")]),s._v(" "),a("li",[s._v("这个循环从标准输入读取数据，直到读取到第一个空行。 输入的数据被保存到 known 哈希表中，之后需要用到。")]),s._v(" "),a("li",[s._v("这个循环读取存储文件中的内容，寻找匹配的行。 如果 known 中的协议和主机名与该行相匹配，这个程序输出结果并退出。")])]),s._v(" "),a("p",[s._v("我们把这个辅助工具保存为 "),a("code",[s._v("git-credential-read-only")]),s._v("，放到我们的 PATH 路径下并且给予执行权限。 一个交互式会话类似：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git credential-read-only --file=/mnt/shared/creds get\nprotocol=https\nhost=mygithost\n\nprotocol=https\nhost=mygithost\nusername=bob\npassword=s3cre7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("由于这个的名字是 "),a("code",[s._v("git-")]),s._v("  开头，所以我们可以在配置值中使用简便的语法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("$ git config --global credential.helper read-only --file /mnt/shared/creds\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("正如你看到的，扩展这个系统是相当简单的，并且可以为你和你的团队解决一些常见问题。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("这一章，完全不知道在说什么，没看懂")])])])}),[],!1,null,null,null);t.default=n.exports}}]);