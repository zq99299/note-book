(window.webpackJsonp=window.webpackJsonp||[]).push([[530],{1998:function(s,a,t){"use strict";t.r(a);var n=t(13),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包"}},[s._v("#")]),s._v(" 打包")]),s._v(" "),t("p",[s._v("虽然我们已经了解了网络传输 Git 数据的常用方法（如 HTTP，SSH 等），但还有另外一种不太常见却又十分有用的方式。")]),s._v(" "),t("p",[t("strong",[s._v("Git 可以将它的数据 「打包」 到一个文件中")]),s._v("。 这在许多场景中都很有用。 有可能你的网络中断了，但你又希望将你的提交传给你的合作者们。 可能你不在办公网中并且出于安全考虑没有给你接入内网的权限。 可能你的无线、有线网卡坏掉了。 可能你现在没有共享服务器的权限，你又希望通过邮件将更新发送给别人，却不希望通过 "),t("code",[s._v("format-patch")]),s._v("  的方式传输 40 个提交。")]),s._v(" "),t("p",[s._v("这些情况下 "),t("code",[s._v("git bundle")]),s._v(" 就会很有用。 "),t("code",[s._v("bundle")]),s._v("  命令会将  "),t("code",[s._v("git push")]),s._v("  命令所传输的所有内容打包成一个二进制文件，你可以将这个文件通过邮件或者闪存传给其他人，然后解包到其他的仓库中。")]),s._v(" "),t("p",[s._v("来看看一个简单的例子。 假设你有一个包含两个提交的仓库：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\ncommit 9a466c572fe88b195efd356c3f2bbeccdb504102\nAuthor: Scott Chacon "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nDate:   Wed Mar "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 07:34:10 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2010")]),s._v(" -0800\n\n    second commit\n\ncommit b1ec3248f39900d2a406049d762aa68e9641be25\nAuthor: Scott Chacon "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("schacon@gmail.com"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nDate:   Wed Mar "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 07:34:01 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2010")]),s._v(" -0800\n\n    first commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("如果你想把这个仓库发送给其他人但你没有其他仓库的权限，或者就是懒得新建一个仓库，你就可以用 "),t("code",[s._v("git bundle create")]),s._v("  命令来打包。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" bundle create repo.bundle HEAD master\nCounting objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(", done.\nDelta compression using up to "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" threads.\nCompressing objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nWriting objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("/6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("441")]),s._v(" bytes, done.\nTotal "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", reused "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("然后你就会有一个名为 repo.bundle 的文件，"),t("strong",[s._v("该文件包含了所有重建该仓库 master 分支所需的数据")]),s._v("。 在使用 "),t("code",[s._v("bundle")]),s._v("  命令时，"),t("strong",[s._v("你需要列出所有你希望打包的引用或者提交的区间")]),s._v("。 如果你希望这个仓库可以在别处被克隆，你应该像例子中那样增加一个 "),t("code",[s._v("HEAD")]),s._v("  引用。")]),s._v(" "),t("p",[s._v("你可以将这个 "),t("code",[s._v("repo.bundle")]),s._v("  文件通过邮件或者U盘传给别人。")]),s._v(" "),t("p",[s._v("另一方面，假设别人传给你一个  "),t("code",[s._v("repo.bundle")]),s._v("  文件并希望你在这个项目上工作。 你可以从这个二进制文件中克隆出一个目录，就像从一个 URL 克隆一样。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone repo.bundle repo\nInitialized empty Git repository "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" /private/tmp/bundle/repo/.git/\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" repo\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --oneline\n9a466c5 second commit\nb1ec324 first commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("如果你在打包时没有包含 HEAD 引用，你还需要在命令后指定一个 "),t("code",[s._v("-b master")]),s._v("  或者其他被引入的分支，否则 Git 不知道应该检出哪一个分支。")]),s._v(" "),t("p",[s._v("现在假设你提交了 3 个修订，并且要用邮件或者U盘将新的提交放在一个包里传回去。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --oneline\n71b84da last commit - second repo\nc99cf5b fourth commit - second repo\n7011d3d third commit - second repo\n9a466c5 second commit\nb1ec324 first commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("首先我们 "),t("strong",[s._v("需要确认我们希望被打包的提交区间")]),s._v("。 和网络协议不太一样，网络协议会自动计算出所需传输的最小数据集，而我们需要手动计算。 当然你可以像上面那样将整个仓库打包，但最好仅仅打包变更的部分 —— 就是我们刚刚在本地做的 3 个提交。")]),s._v(" "),t("p",[s._v("为了实现这个目标，你需要计算出差别。")]),s._v(" "),t("p",[s._v("就像我们在 "),t("RouterLink",{attrs:{to:"/git-scm/07/01.html"}},[s._v("提交区间")]),s._v(" 介绍的，你有很多种方式去指明一个提交区间。 我们可以使用 "),t("code",[s._v("origin/master..master")]),s._v("  或者 "),t("code",[s._v("master ^origin/master")]),s._v("  之类的方法来获取那 3 个在我们的 master 分支而不在原始仓库中的提交。 你可以用 log 命令来测试。")],1),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ git log --oneline master ^origin/master\n71b84da last commit - second repo\nc99cf5b fourth commit - second repo\n7011d3d third commit - second repo\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这样就获取到我们希望被打包的提交列表，让我们将这些提交打包。 我们可以用 "),t("code",[s._v("git bundle create")]),s._v(" 命令，加上我们想用的文件名，以及要打包的提交区间。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" bundle create commits.bundle master ^9a466c5\nCounting objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(", done.\nDelta compression using up to "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" threads.\nCompressing objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("/3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", done.\nWriting objects: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("% "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("/9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("775")]),s._v(" bytes, done.\nTotal "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", reused "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("delta "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("现在在我们的目录下会有一个 commits.bundle 文件。 如果我们把这个文件发送给我们的合作者，她可以将这个文件导入到原始的仓库中，即使在这期间已经有其他的工作提交到这个仓库中。")]),s._v(" "),t("p",[s._v("当她拿到这个包时，她可以在导入到仓库之前查看这个包里包含了什么内容。 "),t("strong",[t("code",[s._v("bundle verify")]),s._v("  命令可以检查这个文件是否是一个合法的 Git 包，是否拥有共同的祖先来导入")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" bundle verify "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/commits.bundle\nThe bundle contains "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ref\n71b84daaf49abed142a373b6e5c59a22dc6560dc refs/heads/master\nThe bundle requires these "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ref\n9a466c572fe88b195efd356c3f2bbeccdb504102 second commit\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/commits.bundle is okay\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("如果打包工具仅仅把最后两个提交打包，而不是三个，原始的仓库是无法导入这个包的，因为这个包缺失了必要的提交记录。这时候 verify 的输出类似：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" bundle verify "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/commits-bad.bundle\nerror: Repository lacks these prerequisite commits:\nerror: 7011d3d8fc200abe0ad561c011c3852a4b7bbe95 third commit - second repo\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("而我们的第一个包是合法的，所以我们可以从这个包里提取出提交。 如果你想查看这边包里可以导入哪些分支，同样有一个命令可以列出这些顶端：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" bundle list-heads "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/commits.bundle\n71b84daaf49abed142a373b6e5c59a22dc6560dc refs/heads/master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("verify 子命令同样可以告诉你有哪些顶端。 该功能的目的是查看哪些是可以被拉入的，所以你可以使用fetch 或者 pull 命令从包中导入提交。 这里我们要从包中取出 master 分支到我们仓库中的 "),t("em",[s._v("other-master")]),s._v(" 分支：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/commits.bundle master:other-master\nFrom "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/commits.bundle\n * "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("new branch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("      master     -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" other-master\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("可以看到我们已经将提交导入到 "),t("em",[s._v("other-master")]),s._v(" 分支，以及在这期间我们自己在 "),t("em",[s._v("master")]),s._v(" 分支上的提交。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --oneline --decorate --graph --all\n* 8255d41 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HEAD, master"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" third commit - first repo\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" * 71b84da "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("other-master"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" last commit - second repo\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" * c99cf5b fourth commit - second repo\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" * 7011d3d third commit - second repo\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("/\n* 9a466c5 second commit\n* b1ec324 first commit\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("因此，当你在没有合适的网络或者可共享仓库的情况下，git bundle 很适合用于共享或者网络类型的操作。")])])}),[],!1,null,null,null);a.default=e.exports}}]);